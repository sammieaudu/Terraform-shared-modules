# name: Multi-Environment Deployment from Main Branch
# on:
#   push:
#     branches:
#       - dev
#       - qa
#       - main
   
#     paths-ignore:
#       - 'charts/**'

#   pull_request:
#     branches:
#       - dev
#       - qa
#       - main
#     paths-ignore:
#         - 'charts/**'

# permissions:
#   id-token: write
#   contents: write

# jobs:
#   services-infrastructure:
#     runs-on:
#       labels: ubuntu-latest
#     environment: ${{ github.event_name == 'push' && github.ref_name || github.event.pull_request.base.ref }}
#     env:
#       ENV_PREFIX: ${{ github.event_name == 'push' && github.ref_name || github.event.pull_request.base.ref }}

#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v3
#         with:
#           role-to-assume: ${{ vars.OIDC_ROLE_TO_ASSUME }}
#           role-session-name: GitHub_to_AWS_via_FederatedOIDC
#           aws-region: ${{ vars.REGION }}

#       - name: Sts GetCallerIdentity
#         run: |
#           aws sts get-caller-identity

#       - name: 'Create env file'
#         run: |
#           echo ACCOUNT_ID=${{ vars.ACCOUNT_ID }} >>.env
#           cat .env


#       - name: Terraform apply
#         if: github.event_name == 'push'
#         run: |
#           terraform apply

#       - name: Get latest tag
#         if: github.event_name == 'push'
#         run: |
#           git fetch --tags
#           LATEST_TAG=$(git tag --list "${{ env.ENV_PREFIX }}-v*" | sort -V | tail -n 1 || echo "${{ env.ENV_PREFIX }}-v0.0.0")
#           echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
   
#       - name: Calculate next version
#         if: github.event_name == 'push'
#         run: |
#           LATEST_TAG=${{ env.LATEST_TAG }}
#             echo "Previous tag: $LATEST_TAG"
#             VERSION_STRING=$(echo $LATEST_TAG | sed 's/.*-v//')
#             IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_STRING"
#             MAJOR=${MAJOR:-0}
#             MINOR=${MINOR:-0}
#             PATCH=${PATCH:-0}
#             if [[ "$MAJOR" -lt "${{ vars.TAG_MAJOR_VERSION }}" || "$MINOR" -lt "${{ vars.TAG_MINOR_VERSION }}" ]]; then
#               echo "Major or minor version updated, resetting patch."
#               NEW_PATCH=0
#             else
#               echo "No major or minor updates, incrementing patch."
#               NEW_PATCH=$((PATCH + 1))
#             fi
#             NEW_MAJOR=${{ vars.TAG_MAJOR_VERSION }}
#             NEW_MINOR=${{ vars.TAG_MINOR_VERSION }}
#             NEW_TAG="${{ env.ENV_PREFIX }}-v$NEW_MAJOR.$NEW_MINOR.$NEW_PATCH"
#             echo "New tag: $NEW_TAG"
#             echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

#       - name: Create and push tag
#         if: github.event_name == 'push'
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           git tag ${{ env.NEW_TAG }}
#           git push origin ${{ env.NEW_TAG }}